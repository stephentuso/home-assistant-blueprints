blueprint:
  name: Filtered Select
  description: Syncs select to input_select, but excludes values
  domain: automation
  input:
    select_entity:
      name: Select
      description: Entity to sync with and get options from
      selector:
        entity:
          domain: select
    helper_entity:
      name: Input Select
      description: Helper that will have the filtered options
      selector:
        entity:
          domain: input_select
    excluded:
      name: Excluded Options
      description: Options to exclude from the helper input_select
      selector:
        text:
          multiple: true

mode: restart

trigger:
  - platform: state
    entity_id: !input select_entity
    id: original
  - platform: state
    entity_id: !input helper_entity
    to: null
    id: filtered

condition: []

action:
  - variables:
      select_entity: !input select_entity
      helper_entity: !input helper_entity
      excluded: !input excluded
  - choose:
      - conditions:
          - condition: trigger
            id:
              - original
        sequence:
          - service: input_select.set_options
            metadata: {}
            data:
              options: >
                {% set data = state_attr(select_entity, 'options') %} 
                {% set filtered = namespace(values=[]) %} 
                {% for item in data -%}
                  {% if item not in excluded -%}
                    {% set filtered.values = filtered.values + [item] %}
                  {%- endif %}
                {%- endfor %}
                {{ filtered.values }}
            target:
              entity_id: !input helper_entity
          - condition: template
            value_template: "{{ states(select_entity) != states(helper_entity) }}"
          - service: input_select.select_option
            metadata: {}
            data:
              option: "{{ trigger.to_state.state }}"
            target:
              entity_id: !input helper_entity
      - conditions:
          - condition: trigger
            id:
              - filtered
        sequence:
          - condition: template
            value_template: >-
              {{ trigger.to_state.state in state_attr(helper_entity, 'options') }}
          - condition: template
            value_template: "{{ states(select_entity) != states(helper_entity) }}"
          - service: select.select_option
            metadata: {}
            data:
              option: "{{ trigger.to_state.state }}"
            target:
              entity_id: !input select_entity

